#include <iostream>
using namespace std;
#define ll long long

void Merge(int *arr, int low, int mid, int high) {
    int i = low;
    int j = mid + 1;
    int k = low;
    int temp[high + 1];

    while (i <= mid && j <= high) {
        if (arr[i] < arr[j]) {
            temp[k++] = arr[i++];
        } else {
            temp[k++] = arr[j++];
        }
    }

    // Copying the remaining elements from the first half
    while (i <= mid) {
        temp[k++] = arr[i++];
    }

    // Copying the remaining elements from the second half
    while (j <= high) {
        temp[k++] = arr[j++];
    }

    // Copying the merged elements back to the original array
    for (int i = low; i <= high; i++) {
        arr[i] = temp[i];
    }
}

// For dividing
void mergesort(int *arr, int low, int high) {
    if (low < high) {
        int mid = low + (high - low) / 2;

        // Sorting the first and second halves
        mergesort(arr, low, mid);
        mergesort(arr, mid + 1, high);

        // Merging the sorted halves
        Merge(arr, low, mid, high);
    }
}

int main() {
    int n;
    cin >> n;
    int arr[n];

    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    // Calling merge sort function
    mergesort(arr, 0, n - 1);

    // Displaying the sorted array
    cout << "Sorted array: ";
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }

    return 0;
}
