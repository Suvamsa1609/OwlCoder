#include<bits/stdc++.h>
using namespace std;
int FindParent(int a,vector<int>&Parent){
	if(Parent[a] == a) return a;
	return Parent[a] = FindParent(Parent[a],Parent);
}
void Union(int x,int y,vector<int>&Parent,vector<int>&Rank){
	int px = FindParent(x,Parent);
	int py = FindParent(y,Parent);
	if(Rank[px] == Rank[py]){
		Parent[py] = px;
		Rank[px]++;
	}
	else if(Rank[py]<Rank[px]){
		Parent[py] = px;
	}
	else{
		Parent[px] = py;
	}
}
int main(){
	int n;
	cin >> n;
	vector<int>Parent(n+1);
	vector<int>Rank(n+1,0);
	for(int i = 1; i <= n; i++){
		Parent[i] = i;
	}
//	int Q;
//	cin >> Q;
//	while(Q--){
	Union(1,2,Parent,Rank);
	Union(3,4,Parent,Rank);
	Union(2,3,Parent,Rank);
	if(FindParent(1,Parent) == FindParent(4,Parent)){
		cout << "same";
	}else{
		cout << "not";
	}
//	}
}
